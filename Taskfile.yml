version: '3'

set: [errexit, nounset, pipefail]
shopt: [globstar]

includes:
  lint:
    taskfile: https://github.com/nikaro/meta/raw/main/taskfiles/lint.yml
    internal: true
  format:
    taskfile: https://github.com/nikaro/meta/raw/main/taskfiles/format.yml
    internal: true

tasks:
  init:
    desc: Initialize repositry
    cmds:
      - git config core.hooksPath .githooks
      - git config commit.template .gitmessage

  lock:
    desc: Generate lockfile
    sources:
      - ./pyproject.toml
    generates:
      - ./requirements.lock
      - ./requirements-dev.lock
    cmd: uv lock --frozen

  lock:update:
    desc: Update packages to their latest version
    cmd: uv lock --upgrade

  sync:
    desc: Synchronize virtualenv with lockfile
    deps: [lock]
    sources:
      - ./requirements.lock
      - ./requirements-dev.lock
    cmd: uv sync --frozen

  lint:
    desc: Run linters
    cmds:
      - task: lint:default
      - task: lint:python

  lint:python:
    desc: Lint Python code
    deps: [sync]
    sources:
      - ./pyproject.toml
      - ./requirements.lock
      - ./requirements-dev.lock
      - ./src/**/*.py
      - ./tests/**/*.py
    cmds:
      - uv run ruff format --check
      - uv run ruff check
      - uv run basedpyright ./src/
      - cmd: uv run mypy ./src/
        ignore_error: true

  format:
    desc: Run formatters
    cmds:
      - task: format:default
      - task: format:python

  format:python:
    desc: Format Python code
    deps: [sync]
    sources:
      - ./pyproject.toml
      - ./requirements.lock
      - ./requirements-dev.lock
      - ./src/**/*.py
      - ./tests/**/*.py
    cmds:
      - uv run ruff format

  test:
    desc: Run tests
    deps: [sync]
    sources:
      - ./pyproject.toml
      - ./requirements.lock
      - ./requirements-dev.lock
      - ./src/**/*.py
      - ./tests/**/*.py
    cmd: uv run pytest --cov-report=term-missing --cov-report=html --junitxml=junit.xml --override-ini='junit_family=legacy' --cov=sopsy ./tests/

  build:
    desc: Build project
    deps: [sync]
    sources:
      - ./src/**/*.py
      - ./tests/**/*.py
      - ./pyproject.toml
      - ./requirements.lock
    generates:
      - ./dist/*.whl
      - ./dist/*.tar.gz
    cmd: uv build

  gendoc:
    desc: Generate documentation
    deps: [test]
    sources:
      - ./docs/**
      - ./mkdocs.yml
      - ./pyproject.toml
      - ./requirements.lock
      - ./requirements-dev.lock
      - ./src/**/*.py
    cmd: uv run mkdocs build

  clean:
    desc: Cleanup workspace
    cmds:
      - rm -rf ./dist/
      - rm -rf ./.ruff_cache/
      - rm -rf ./.pytest_cache/
      - fd --type directory --no-ignore __pycache__ | xargs --no-run-if-empty rm -rf
      - rm -rf ./site/
